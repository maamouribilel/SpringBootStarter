# //// API DOCUMENTATION ////// #
# ////                   ////// #
#spring.mvc.servlet.path=/api
application-description=@project.description@
application-version=@project.version@
logging.level.org.springframework.boot.autoconfigure=ERROR
#http://localhost:8080/api/swagger-ui.html
#http://localhost:8080/api/swagger-ui/index.html?configUrl=/api/v3/api-docs/swagger-config
#springdoc.swagger-ui.path=/swagger-ui-custom.html
# Disabling the /v3/api-docs endpoint
#springdoc.api-docs.enabled=false
# Disabling the swagger-ui
#springdoc.swagger-ui.enabled=false
# Packages to include
#springdoc.packagesToScan=com.package1, com.package2
# Paths to include
#springdoc.pathsToMatch=/v1, /api/balance/**






# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
spring.jpa.hibernate.ddl-auto=create-drop
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:8889/learningspring
spring.datasource.username=root
spring.datasource.password=root
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# Show or not log for each sql query
spring.jpa.show-sql = true
# init
spring.datasource.initialization-mode=always